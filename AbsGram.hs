-- File generated by the BNF Converter (bnfc 2.9.5).

{-# LANGUAGE GeneralizedNewtypeDeriving #-}

-- | The abstract syntax of language gram.

module AbsGram where

import Prelude (Char, Double, Integer, String)
import qualified Prelude as C (Eq, Ord, Show, Read)
import qualified Data.String

data Program = ProgramStart [Stm]
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Stm = Declaration Decl | Assignment Ass
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data BasicType
    = BasicType_int
    | BasicType_float
    | BasicType_char
    | BasicType_String
    | BasicType_bool
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Boolean = Boolean_True | Boolean_False
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Value
    = ValueInteger Integer
    | ValueDouble Double
    | ValueChar Char
    | ValueString String
    | ValueBoolean Boolean
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Decl
    = VarDeclaration BasicType Ident Value
    | ArrayDeclaration BasicType Ident Integer
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Ass = SumAssignment Ident Ident Ident
  deriving (C.Eq, C.Ord, C.Show, C.Read)

newtype Ident = Ident String
  deriving (C.Eq, C.Ord, C.Show, C.Read, Data.String.IsString)

